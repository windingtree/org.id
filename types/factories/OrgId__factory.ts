/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OrgId, OrgIdInterface } from "../OrgId";

const _abi = [
  {
    inputs: [],
    name: "CalledNotByOrgIdOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "OrgIdAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "OrgIdNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "OrgJsonUriEmpty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OrgIdCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "OrgJsonUriChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "createOrgId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getOrgId",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getOrgIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "orgIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrgIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "orgIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "getTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "setOrgJson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506122ad806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80634f6ccce7116100c3578063a22cb4651161007c578063a22cb465146102d0578063b88d4fde146102e3578063c87b56dd146102f6578063c9cb65e114610309578063e4f6499014610329578063e985e9c51461033157600080fd5b80634f6ccce7146102645780636352211e1461027757806370a082311461028a5780638129fc1c1461029d57806395d89b41146102a557806398980a8a146102ad57600080fd5b80630ad0abce116101155780630ad0abce146101f357806318160ddd1461020657806323b872dd146102185780632f745c591461022b57806335178d911461023e57806342842e0e1461025157600080fd5b80630193eda61461015257806301ffc9a71461017b57806306fdde031461019e578063081812fc146101b3578063095ea7b3146101de575b600080fd5b610165610160366004611f50565b61036d565b6040516101729190611ffc565b60405180910390f35b61018e610189366004611f16565b610544565b6040519015158152602001610172565b6101a661056f565b60405161017291906120a9565b6101c66101c1366004611e81565b610601565b6040516001600160a01b039091168152602001610172565b6101f16101ec366004611e57565b61069b565b005b6101f1610201366004611e9a565b6107b1565b6099545b604051908152602001610172565b6101f1610226366004611d03565b610945565b61020a610239366004611e57565b610976565b6101f161024c366004611e9a565b610a0c565b6101f161025f366004611d03565b610b0b565b61020a610272366004611e81565b610b26565b6101c6610285366004611e81565b610bb9565b61020a610298366004611cae565b610c30565b6101f1610cb7565b6101a6610d6f565b6102c06102bb366004611e81565b610d7e565b6040516101729493929190612040565b6101f16102de366004611e1b565b610e58565b6101f16102f1366004611d3f565b610f1d565b6101a6610304366004611e81565b610f55565b61020a610317366004611e81565b600090815260c9602052604090205490565b61016561102e565b61018e61033f366004611cd0565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b606060008267ffffffffffffffff81111561038a5761038a612274565b6040519080825280602002602001820160405280156103b3578160200160208202803683370190505b509050600080855b60cc54811080156103d457506103d186886121ad565b81105b1561046a5760cc81815481106103ec576103ec61225e565b90600052602060002001548484815181106104095761040961225e565b6020026020010181815250506000801b60cc828154811061042c5761042c61225e565b90600052602060002001541461044a578161044681612217565b9250505b8261045481612217565b935050808061046290612217565b9150506103bb565b508067ffffffffffffffff81111561048457610484612274565b6040519080825280602002602001820160405280156104ad578160200160208202803683370190505b5093506000915060005b835181101561053a576000801b8482815181106104d6576104d661225e565b602002602001015114610528578381815181106104f5576104f561225e565b602002602001015185848151811061050f5761050f61225e565b60209081029190910101528261052481612217565b9350505b8061053281612217565b9150506104b7565b5050505092915050565b60006001600160e01b031982166345f8f68160e11b1480610569575061056982611085565b92915050565b60606065805461057e906121dc565b80601f01602080910402602001604051908101604052809291908181526020018280546105aa906121dc565b80156105f75780601f106105cc576101008083540402835291602001916105f7565b820191906000526020600020905b8154815290600101906020018083116105da57829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b031661067f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006106a682610bb9565b9050806001600160a01b0316836001600160a01b031614156107145760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610676565b336001600160a01b03821614806107305750610730813361033f565b6107a25760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610676565b6107ac83836110aa565b505050565b806107cf57604051633f0e0a7f60e21b815260040160405180910390fd5b6000336040516bffffffffffffffffffffffff19606083901b1660208201526034810186905290915060009060540160408051601f19818403018152918152815160209283012060cc8054600181019091557f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe01819055600081815260c990935291205490915015610877576040516358dc901360e01b815260048101829052602401610676565b600061088260995490565b61088d9060016121ad565b90506108998382611118565b600082815260c96020908152604080832084905583835260ca825280832085905560cb90915290206108cc908686611b85565b506040516001600160a01b0384169083907f49422f7ad2eca08595f1596952d2d805b5d5ba06f8c371dcb617c86a5b42ba0790600090a3817f4e0249d19860daeb2f0627d804cc93426e237cb754fef478c3a6cbcbc2762657868660405161093592919061207a565b60405180910390a2505050505050565b61094f3382611136565b61096b5760405162461bcd60e51b81526004016106769061215c565b6107ac83838361122d565b600061098183610c30565b82106109e35760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610676565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b821580610a255750600083815260c96020526040902054155b15610a46576040516387fe3aad60e01b815260048101849052602401610676565b80610a6457604051633f0e0a7f60e21b815260040160405180910390fd5b600083815260c960205260409020543390610a7e90610bb9565b6001600160a01b031614610aa557604051635612e54f60e11b815260040160405180910390fd5b600083815260c96020908152604080832054835260cb9091529020610acb908383611b85565b50827f4e0249d19860daeb2f0627d804cc93426e237cb754fef478c3a6cbcbc27626578383604051610afe92919061207a565b60405180910390a2505050565b6107ac83838360405180602001604052806000815250610f1d565b6000610b3160995490565b8210610b945760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610676565b60998281548110610ba757610ba761225e565b90600052602060002001549050919050565b6000818152606760205260408120546001600160a01b0316806105695760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610676565b60006001600160a01b038216610c9b5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610676565b506001600160a01b031660009081526068602052604090205490565b600054610100900460ff1680610cd0575060005460ff16155b610cec5760405162461bcd60e51b81526004016106769061210e565b600054610100900460ff16158015610d0e576000805461ffff19166101011790555b610d526040518060400160405280600581526020016413d491da5160da1b8152506040518060400160405280600581526020016413d491da5160da1b8152506113d8565b610d5a61145f565b8015610d6c576000805461ff00191690555b50565b60606066805461057e906121dc565b600081815260ca602090815260408083205460679092528220546001600160a01b031615801592606091610e5157600085815260cb602052604090208054610dc5906121dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610df1906121dc565b8015610e3e5780601f10610e1357610100808354040283529160200191610e3e565b820191906000526020600020905b815481529060010190602001808311610e2157829003601f168201915b50505050509150610e4e85610bb9565b90505b9193509193565b6001600160a01b038216331415610eb15760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610676565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610f273383611136565b610f435760405162461bcd60e51b81526004016106769061215c565b610f4f848484846114be565b50505050565b6000818152606760205260409020546060906001600160a01b0316610f90576040516306caeb1360e41b815260048101839052602401610676565b600082815260cb602052604090208054610fa9906121dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd5906121dc565b80156110225780601f10610ff757610100808354040283529160200191611022565b820191906000526020600020905b81548152906001019060200180831161100557829003601f168201915b50505050509050919050565b606060cc8054806020026020016040519081016040528092919081815260200182805480156105f757602002820191906000526020600020905b815481526020019060010190808311611068575050505050905090565b60006001600160e01b0319821663780e9d6360e01b14806105695750610569826114f1565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906110df82610bb9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b611132828260405180602001604052806000815250611541565b5050565b6000818152606760205260408120546001600160a01b03166111af5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610676565b60006111ba83610bb9565b9050806001600160a01b0316846001600160a01b031614806111f55750836001600160a01b03166111ea84610601565b6001600160a01b0316145b8061122557506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661124082610bb9565b6001600160a01b0316146112a85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610676565b6001600160a01b03821661130a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610676565b611315838383611574565b6113206000826110aa565b6001600160a01b03831660009081526068602052604081208054600192906113499084906121c5565b90915550506001600160a01b03821660009081526068602052604081208054600192906113779084906121ad565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff16806113f1575060005460ff16155b61140d5760405162461bcd60e51b81526004016106769061210e565b600054610100900460ff1615801561142f576000805461ffff19166101011790555b61143761162c565b61143f61162c565b6114498383611696565b80156107ac576000805461ff0019169055505050565b600054610100900460ff1680611478575060005460ff16155b6114945760405162461bcd60e51b81526004016106769061210e565b600054610100900460ff161580156114b6576000805461ffff19166101011790555b610d5a61172b565b6114c984848461122d565b6114d58484848461179a565b610f4f5760405162461bcd60e51b8152600401610676906120bc565b60006001600160e01b031982166380ac58cd60e01b148061152257506001600160e01b03198216635b5e139f60e01b145b8061056957506301ffc9a760e01b6001600160e01b0319831614610569565b61154b83836118a7565b611558600084848461179a565b6107ac5760405162461bcd60e51b8152600401610676906120bc565b6001600160a01b0383166115cf576115ca81609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b6115f2565b816001600160a01b0316836001600160a01b0316146115f2576115f283826119f5565b6001600160a01b038216611609576107ac81611a92565b826001600160a01b0316826001600160a01b0316146107ac576107ac8282611b41565b600054610100900460ff1680611645575060005460ff16155b6116615760405162461bcd60e51b81526004016106769061210e565b600054610100900460ff16158015610d5a576000805461ffff19166101011790558015610d6c576000805461ff001916905550565b600054610100900460ff16806116af575060005460ff16155b6116cb5760405162461bcd60e51b81526004016106769061210e565b600054610100900460ff161580156116ed576000805461ffff19166101011790555b8251611700906065906020860190611c09565b508151611714906066906020850190611c09565b5080156107ac576000805461ff0019169055505050565b600054610100900460ff1680611744575060005460ff16155b6117605760405162461bcd60e51b81526004016106769061210e565b600054610100900460ff16158015611782576000805461ffff19166101011790555b61178a61162c565b61179261162c565b610d5a61162c565b60006001600160a01b0384163b1561189c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906117de903390899088908890600401611fbf565b602060405180830381600087803b1580156117f857600080fd5b505af1925050508015611828575060408051601f3d908101601f1916820190925261182591810190611f33565b60015b611882573d808015611856576040519150601f19603f3d011682016040523d82523d6000602084013e61185b565b606091505b50805161187a5760405162461bcd60e51b8152600401610676906120bc565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611225565b506001949350505050565b6001600160a01b0382166118fd5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610676565b6000818152606760205260409020546001600160a01b0316156119625760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610676565b61196e60008383611574565b6001600160a01b03821660009081526068602052604081208054600192906119979084906121ad565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611a0284610c30565b611a0c91906121c5565b600083815260986020526040902054909150808214611a5f576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b609954600090611aa4906001906121c5565b6000838152609a602052604081205460998054939450909284908110611acc57611acc61225e565b906000526020600020015490508060998381548110611aed57611aed61225e565b6000918252602080832090910192909255828152609a90915260408082208490558582528120556099805480611b2557611b25612248565b6001900381819060005260206000200160009055905550505050565b6000611b4c83610c30565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b828054611b91906121dc565b90600052602060002090601f016020900481019282611bb35760008555611bf9565b82601f10611bcc5782800160ff19823516178555611bf9565b82800160010185558215611bf9579182015b82811115611bf9578235825591602001919060010190611bde565b50611c05929150611c7d565b5090565b828054611c15906121dc565b90600052602060002090601f016020900481019282611c375760008555611bf9565b82601f10611c5057805160ff1916838001178555611bf9565b82800160010185558215611bf9579182015b82811115611bf9578251825591602001919060010190611c62565b5b80821115611c055760008155600101611c7e565b80356001600160a01b0381168114611ca957600080fd5b919050565b600060208284031215611cc057600080fd5b611cc982611c92565b9392505050565b60008060408385031215611ce357600080fd5b611cec83611c92565b9150611cfa60208401611c92565b90509250929050565b600080600060608486031215611d1857600080fd5b611d2184611c92565b9250611d2f60208501611c92565b9150604084013590509250925092565b60008060008060808587031215611d5557600080fd5b611d5e85611c92565b9350611d6c60208601611c92565b925060408501359150606085013567ffffffffffffffff80821115611d9057600080fd5b818701915087601f830112611da457600080fd5b813581811115611db657611db6612274565b604051601f8201601f19908116603f01168101908382118183101715611dde57611dde612274565b816040528281528a6020848701011115611df757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611e2e57600080fd5b611e3783611c92565b915060208301358015158114611e4c57600080fd5b809150509250929050565b60008060408385031215611e6a57600080fd5b611e7383611c92565b946020939093013593505050565b600060208284031215611e9357600080fd5b5035919050565b600080600060408486031215611eaf57600080fd5b83359250602084013567ffffffffffffffff80821115611ece57600080fd5b818601915086601f830112611ee257600080fd5b813581811115611ef157600080fd5b876020828501011115611f0357600080fd5b6020830194508093505050509250925092565b600060208284031215611f2857600080fd5b8135611cc98161228a565b600060208284031215611f4557600080fd5b8151611cc98161228a565b60008060408385031215611f6357600080fd5b50508035926020909101359150565b6000815180845260005b81811015611f9857602081850181015186830182015201611f7c565b81811115611faa576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ff290830184611f72565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561203457835183529284019291840191600101612018565b50909695505050505050565b84151581528360208201526080604082015260006120616080830185611f72565b905060018060a01b038316606083015295945050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b602081526000611cc96020830184611f72565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156121c0576121c0612232565b500190565b6000828210156121d7576121d7612232565b500390565b600181811c908216806121f057607f821691505b6020821081141561221157634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561222b5761222b612232565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610d6c57600080fdfea164736f6c6343000807000a";

export class OrgId__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OrgId> {
    return super.deploy(overrides || {}) as Promise<OrgId>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OrgId {
    return super.attach(address) as OrgId;
  }
  connect(signer: Signer): OrgId__factory {
    return super.connect(signer) as OrgId__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrgIdInterface {
    return new utils.Interface(_abi) as OrgIdInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OrgId {
    return new Contract(address, _abi, signerOrProvider) as OrgId;
  }
}
