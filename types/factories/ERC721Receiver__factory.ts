/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721Receiver,
  ERC721ReceiverInterface,
} from "../ERC721Receiver";

const _abi = [
  {
    inputs: [
      {
<<<<<<< HEAD
=======
        internalType: "bytes32",
        name: "c__0x63b7ff9d",
        type: "bytes32",
      },
    ],
    name: "c_0x63b7ff9d",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
>>>>>>> develop
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
<<<<<<< HEAD
  "0x608060405234801561001057600080fd5b50610130806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004f61003e366004610088565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200160405180910390f35b80356001600160a01b038116811461008357600080fd5b919050565b6000806000806000608086880312156100a057600080fd5b6100a98661006c565b94506100b76020870161006c565b935060408601359250606086013567ffffffffffffffff808211156100db57600080fd5b818801915088601f8301126100ef57600080fd5b8135818111156100fe57600080fd5b89602082850101111561011057600080fd5b969995985093965060200194939250505056fea164736f6c6343000807000a";
=======
  "0x608060405234801561001057600080fd5b506104d4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063150b7a021461003b578063caf031f41461006b575b600080fd5b61005560048036038101906100509190610318565b610087565b60405161006291906103dc565b60405180910390f35b610085600480360381019061008091906103a0565b610280565b005b60006100b57f7d275b311825cb1630f5cb2324b3a66efa29453d8076b02abca0ab92d13cf31a60001b610280565b6100e17fa5794b9328f3fce0900f7d1fd7693ef6b82b8dbd6c606292cd5f7e067c123cb560001b610280565b61010d7f64c93d6802e80c6ca9d08e54bc24eb019dcd19f9978970fb910b037ea3428ef660001b610280565b6101397fcdac1f0c24d333059922431b2869e9f55905f40d1b65af073601c1ec9c8a368460001b610280565b6101657f89973403daae0e3dac37897bba853cb3de4c0cdd6b91158ebf2e508a2d64a37b60001b610280565b6101917f93f0461fd5d99a6729cb3e129000db9d43e318a355824ddb0aa6e3c1fc66eef560001b610280565b6101bd7fc288f8b866926ba63658650cd9e688308f6ad44827fe8226529905d8af997fee60001b610280565b6101e97f45dd614758ed7cab043b1d105c1cfcd740953c027431d4aa2c1338667c78323060001b610280565b6102157f36fae186b2fe9af89e3e1d8940447bf8854a2636a2c2704d744b5945cbf8fefa60001b610280565b6102417f8886014ee081c246a637fb549661ade816550fb65e6832e6bce4121370606d8b60001b610280565b61026d7f95d19a0df6fdc67380be7d1289fbead519d0c7a7569c7df113e2d77c1a97409a60001b610280565b63150b7a0260e01b905095945050505050565b50565b60008135905061029281610482565b92915050565b6000813590506102a781610499565b92915050565b60008083601f8401126102c3576102c261046e565b5b8235905067ffffffffffffffff8111156102e0576102df610469565b5b6020830191508360018202830111156102fc576102fb610473565b5b9250929050565b600081359050610312816104b0565b92915050565b6000806000806000608086880312156103345761033361047d565b5b600061034288828901610283565b955050602061035388828901610283565b945050604061036488828901610303565b935050606086013567ffffffffffffffff81111561038557610384610478565b5b610391888289016102ad565b92509250509295509295909350565b6000602082840312156103b6576103b561047d565b5b60006103c484828501610298565b91505092915050565b6103d681610413565b82525050565b60006020820190506103f160008301846103cd565b92915050565b60006104028261043f565b9050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b61048b816103f7565b811461049657600080fd5b50565b6104a281610409565b81146104ad57600080fd5b50565b6104b98161045f565b81146104c457600080fd5b5056fea164736f6c6343000807000a";
>>>>>>> develop

type ERC721ReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Receiver__factory extends ContractFactory {
  constructor(...args: ERC721ReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Receiver> {
    return super.deploy(overrides || {}) as Promise<ERC721Receiver>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721Receiver {
    return super.attach(address) as ERC721Receiver;
  }
  connect(signer: Signer): ERC721Receiver__factory {
    return super.connect(signer) as ERC721Receiver__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ReceiverInterface {
    return new utils.Interface(_abi) as ERC721ReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Receiver {
    return new Contract(address, _abi, signerOrProvider) as ERC721Receiver;
  }
}
