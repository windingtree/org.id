/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export interface OrgIdDelegatesInterface extends ethers.utils.Interface {
  functions: {
    "addDelegates(bytes32,string[])": FunctionFragment;
    "approve(address,uint256)": FunctionFragment;
    "balanceOf(address)": FunctionFragment;
<<<<<<< HEAD
=======
    "c_0x3bed8f0b(bytes32)": FunctionFragment;
    "c_0x44655cf7(bytes32)": FunctionFragment;
    "c_0xc39a2e1c(bytes32)": FunctionFragment;
    "c_0xf29f1bae(bytes32)": FunctionFragment;
>>>>>>> develop
    "createOrgId(bytes32,string)": FunctionFragment;
    "getApproved(uint256)": FunctionFragment;
    "getDelegates(bytes32)": FunctionFragment;
    "getOrgId(uint256)": FunctionFragment;
    "getOrgIds(uint256,uint256)": FunctionFragment;
    "getTokenId(bytes32)": FunctionFragment;
    "isApprovedForAll(address,address)": FunctionFragment;
    "name()": FunctionFragment;
    "ownerOf(uint256)": FunctionFragment;
    "removeDelegates(bytes32)": FunctionFragment;
    "safeTransferFrom(address,address,uint256)": FunctionFragment;
    "setApprovalForAll(address,bool)": FunctionFragment;
    "setOrgJson(bytes32,string)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "symbol()": FunctionFragment;
    "tokenByIndex(uint256)": FunctionFragment;
    "tokenOfOwnerByIndex(address,uint256)": FunctionFragment;
    "tokenURI(uint256)": FunctionFragment;
    "totalSupply()": FunctionFragment;
    "transferFrom(address,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addDelegates",
    values: [BytesLike, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "balanceOf", values: [string]): string;
  encodeFunctionData(
<<<<<<< HEAD
=======
    functionFragment: "c_0x3bed8f0b",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "c_0x44655cf7",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "c_0xc39a2e1c",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "c_0xf29f1bae",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
>>>>>>> develop
    functionFragment: "createOrgId",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getApproved",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDelegates",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getOrgId",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getOrgIds",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenId",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "ownerOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "removeDelegates",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setOrgJson",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "symbol", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "tokenByIndex",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenOfOwnerByIndex",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [string, string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "addDelegates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(
<<<<<<< HEAD
=======
    functionFragment: "c_0x3bed8f0b",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "c_0x44655cf7",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "c_0xc39a2e1c",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "c_0xf29f1bae",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
>>>>>>> develop
    functionFragment: "createOrgId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getApproved",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDelegates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getOrgId", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getOrgIds", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getTokenId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ownerOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeDelegates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setOrgJson", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenByIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenOfOwnerByIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenURI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;

  events: {
    "Approval(address,address,uint256)": EventFragment;
    "ApprovalForAll(address,address,bool)": EventFragment;
    "OrgIdCreated(bytes32,address)": EventFragment;
    "OrgIdDelegatesAdded(bytes32,string[])": EventFragment;
    "OrgIdDelegatesRemoved(bytes32,string[])": EventFragment;
    "OrgJsonUriChanged(bytes32,string)": EventFragment;
    "Transfer(address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Approval"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ApprovalForAll"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OrgIdCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OrgIdDelegatesAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OrgIdDelegatesRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OrgJsonUriChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Transfer"): EventFragment;
}

export type ApprovalEvent = TypedEvent<
  [string, string, BigNumber],
  { owner: string; approved: string; tokenId: BigNumber }
>;

export type ApprovalEventFilter = TypedEventFilter<ApprovalEvent>;

export type ApprovalForAllEvent = TypedEvent<
  [string, string, boolean],
  { owner: string; operator: string; approved: boolean }
>;

export type ApprovalForAllEventFilter = TypedEventFilter<ApprovalForAllEvent>;

export type OrgIdCreatedEvent = TypedEvent<
  [string, string],
  { orgId: string; owner: string }
>;

export type OrgIdCreatedEventFilter = TypedEventFilter<OrgIdCreatedEvent>;

export type OrgIdDelegatesAddedEvent = TypedEvent<
  [string, string[]],
  { orgId: string; delegates: string[] }
>;

export type OrgIdDelegatesAddedEventFilter =
  TypedEventFilter<OrgIdDelegatesAddedEvent>;

export type OrgIdDelegatesRemovedEvent = TypedEvent<
  [string, string[]],
  { orgId: string; delegates: string[] }
>;

export type OrgIdDelegatesRemovedEventFilter =
  TypedEventFilter<OrgIdDelegatesRemovedEvent>;

export type OrgJsonUriChangedEvent = TypedEvent<
  [string, string],
  { orgId: string; orgJsonUri: string }
>;

export type OrgJsonUriChangedEventFilter =
  TypedEventFilter<OrgJsonUriChangedEvent>;

export type TransferEvent = TypedEvent<
  [string, string, BigNumber],
  { from: string; to: string; tokenId: BigNumber }
>;

export type TransferEventFilter = TypedEventFilter<TransferEvent>;

export interface OrgIdDelegates extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: OrgIdDelegatesInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addDelegates(
      orgId: BytesLike,
      dids: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "addDelegates(bytes32,string[])"(
      orgId: BytesLike,
      dids: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    balanceOf(owner: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    "balanceOf(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

<<<<<<< HEAD
=======
    c_0x3bed8f0b(
      c__0x3bed8f0b: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    "c_0x3bed8f0b(bytes32)"(
      c__0x3bed8f0b: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    c_0x44655cf7(
      c__0x44655cf7: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    "c_0x44655cf7(bytes32)"(
      c__0x44655cf7: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    c_0xc39a2e1c(
      c__0xc39a2e1c: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    "c_0xc39a2e1c(bytes32)"(
      c__0xc39a2e1c: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    c_0xf29f1bae(
      c__0xf29f1bae: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    "c_0xf29f1bae(bytes32)"(
      c__0xf29f1bae: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

>>>>>>> develop
    createOrgId(
      salt: BytesLike,
      orgJsonUri: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "createOrgId(bytes32,string)"(
      salt: BytesLike,
      orgJsonUri: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getDelegates(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string[]] & { dids: string[] }>;

    "getDelegates(bytes32)"(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string[]] & { dids: string[] }>;

    getOrgId(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [boolean, string, string, string] & {
        exists: boolean;
        orgId: string;
        orgJsonUri: string;
        owner: string;
      }
    >;

    "getOrgId(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [boolean, string, string, string] & {
        exists: boolean;
        orgId: string;
        orgJsonUri: string;
        owner: string;
      }
    >;

    "getOrgIds(uint256,uint256)"(
      cursor: BigNumberish,
      count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]] & { orgIds: string[] }>;

    "getOrgIds()"(
      overrides?: CallOverrides
    ): Promise<[string[]] & { orgIds: string[] }>;

    getTokenId(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { tokenId: BigNumber }>;

    "getTokenId(bytes32)"(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { tokenId: BigNumber }>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    name(overrides?: CallOverrides): Promise<[string]>;

    "name()"(overrides?: CallOverrides): Promise<[string]>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "removeDelegates(bytes32)"(
      orgId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "removeDelegates(bytes32,string[])"(
      orgId: BytesLike,
      dids: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setOrgJson(
      orgId: BytesLike,
      orgJsonUri: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setOrgJson(bytes32,string)"(
      orgId: BytesLike,
      orgJsonUri: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    symbol(overrides?: CallOverrides): Promise<[string]>;

    "symbol()"(overrides?: CallOverrides): Promise<[string]>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    tokenURI(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "tokenURI(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    "totalSupply()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addDelegates(
    orgId: BytesLike,
    dids: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "addDelegates(bytes32,string[])"(
    orgId: BytesLike,
    dids: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  approve(
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "approve(address,uint256)"(
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  "balanceOf(address)"(
    owner: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

<<<<<<< HEAD
=======
  c_0x3bed8f0b(
    c__0x3bed8f0b: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  "c_0x3bed8f0b(bytes32)"(
    c__0x3bed8f0b: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  c_0x44655cf7(
    c__0x44655cf7: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  "c_0x44655cf7(bytes32)"(
    c__0x44655cf7: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  c_0xc39a2e1c(
    c__0xc39a2e1c: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  "c_0xc39a2e1c(bytes32)"(
    c__0xc39a2e1c: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  c_0xf29f1bae(
    c__0xf29f1bae: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  "c_0xf29f1bae(bytes32)"(
    c__0xf29f1bae: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

>>>>>>> develop
  createOrgId(
    salt: BytesLike,
    orgJsonUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "createOrgId(bytes32,string)"(
    salt: BytesLike,
    orgJsonUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getApproved(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getApproved(uint256)"(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getDelegates(orgId: BytesLike, overrides?: CallOverrides): Promise<string[]>;

  "getDelegates(bytes32)"(
    orgId: BytesLike,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getOrgId(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [boolean, string, string, string] & {
      exists: boolean;
      orgId: string;
      orgJsonUri: string;
      owner: string;
    }
  >;

  "getOrgId(uint256)"(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [boolean, string, string, string] & {
      exists: boolean;
      orgId: string;
      orgJsonUri: string;
      owner: string;
    }
  >;

  "getOrgIds(uint256,uint256)"(
    cursor: BigNumberish,
    count: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getOrgIds()"(overrides?: CallOverrides): Promise<string[]>;

  getTokenId(orgId: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

  "getTokenId(bytes32)"(
    orgId: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  isApprovedForAll(
    owner: string,
    operator: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isApprovedForAll(address,address)"(
    owner: string,
    operator: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  name(overrides?: CallOverrides): Promise<string>;

  "name()"(overrides?: CallOverrides): Promise<string>;

  ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "ownerOf(uint256)"(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "removeDelegates(bytes32)"(
    orgId: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "removeDelegates(bytes32,string[])"(
    orgId: BytesLike,
    dids: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256,bytes)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setApprovalForAll(
    operator: string,
    approved: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setApprovalForAll(address,bool)"(
    operator: string,
    approved: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setOrgJson(
    orgId: BytesLike,
    orgJsonUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setOrgJson(bytes32,string)"(
    orgId: BytesLike,
    orgJsonUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  symbol(overrides?: CallOverrides): Promise<string>;

  "symbol()"(overrides?: CallOverrides): Promise<string>;

  tokenByIndex(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "tokenByIndex(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  tokenOfOwnerByIndex(
    owner: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "tokenOfOwnerByIndex(address,uint256)"(
    owner: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  tokenURI(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "tokenURI(uint256)"(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

  transferFrom(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transferFrom(address,address,uint256)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addDelegates(
      orgId: BytesLike,
      dids: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "addDelegates(bytes32,string[])"(
      orgId: BytesLike,
      dids: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

<<<<<<< HEAD
=======
    c_0x3bed8f0b(
      c__0x3bed8f0b: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "c_0x3bed8f0b(bytes32)"(
      c__0x3bed8f0b: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    c_0x44655cf7(
      c__0x44655cf7: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "c_0x44655cf7(bytes32)"(
      c__0x44655cf7: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    c_0xc39a2e1c(
      c__0xc39a2e1c: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "c_0xc39a2e1c(bytes32)"(
      c__0xc39a2e1c: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    c_0xf29f1bae(
      c__0xf29f1bae: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "c_0xf29f1bae(bytes32)"(
      c__0xf29f1bae: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

>>>>>>> develop
    createOrgId(
      salt: BytesLike,
      orgJsonUri: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "createOrgId(bytes32,string)"(
      salt: BytesLike,
      orgJsonUri: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getDelegates(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getDelegates(bytes32)"(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getOrgId(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [boolean, string, string, string] & {
        exists: boolean;
        orgId: string;
        orgJsonUri: string;
        owner: string;
      }
    >;

    "getOrgId(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [boolean, string, string, string] & {
        exists: boolean;
        orgId: string;
        orgJsonUri: string;
        owner: string;
      }
    >;

    "getOrgIds(uint256,uint256)"(
      cursor: BigNumberish,
      count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getOrgIds()"(overrides?: CallOverrides): Promise<string[]>;

    getTokenId(orgId: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getTokenId(bytes32)"(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    name(overrides?: CallOverrides): Promise<string>;

    "name()"(overrides?: CallOverrides): Promise<string>;

    ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "removeDelegates(bytes32)"(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeDelegates(bytes32,string[])"(
      orgId: BytesLike,
      dids: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setOrgJson(
      orgId: BytesLike,
      orgJsonUri: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setOrgJson(bytes32,string)"(
      orgId: BytesLike,
      orgJsonUri: string,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    symbol(overrides?: CallOverrides): Promise<string>;

    "symbol()"(overrides?: CallOverrides): Promise<string>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "tokenURI(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "Approval(address,address,uint256)"(
      owner?: string | null,
      approved?: string | null,
      tokenId?: BigNumberish | null
    ): ApprovalEventFilter;
    Approval(
      owner?: string | null,
      approved?: string | null,
      tokenId?: BigNumberish | null
    ): ApprovalEventFilter;

    "ApprovalForAll(address,address,bool)"(
      owner?: string | null,
      operator?: string | null,
      approved?: null
    ): ApprovalForAllEventFilter;
    ApprovalForAll(
      owner?: string | null,
      operator?: string | null,
      approved?: null
    ): ApprovalForAllEventFilter;

    "OrgIdCreated(bytes32,address)"(
      orgId?: BytesLike | null,
      owner?: string | null
    ): OrgIdCreatedEventFilter;
    OrgIdCreated(
      orgId?: BytesLike | null,
      owner?: string | null
    ): OrgIdCreatedEventFilter;

    "OrgIdDelegatesAdded(bytes32,string[])"(
      orgId?: BytesLike | null,
      delegates?: null
    ): OrgIdDelegatesAddedEventFilter;
    OrgIdDelegatesAdded(
      orgId?: BytesLike | null,
      delegates?: null
    ): OrgIdDelegatesAddedEventFilter;

    "OrgIdDelegatesRemoved(bytes32,string[])"(
      orgId?: BytesLike | null,
      delegates?: null
    ): OrgIdDelegatesRemovedEventFilter;
    OrgIdDelegatesRemoved(
      orgId?: BytesLike | null,
      delegates?: null
    ): OrgIdDelegatesRemovedEventFilter;

    "OrgJsonUriChanged(bytes32,string)"(
      orgId?: BytesLike | null,
      orgJsonUri?: null
    ): OrgJsonUriChangedEventFilter;
    OrgJsonUriChanged(
      orgId?: BytesLike | null,
      orgJsonUri?: null
    ): OrgJsonUriChangedEventFilter;

    "Transfer(address,address,uint256)"(
      from?: string | null,
      to?: string | null,
      tokenId?: BigNumberish | null
    ): TransferEventFilter;
    Transfer(
      from?: string | null,
      to?: string | null,
      tokenId?: BigNumberish | null
    ): TransferEventFilter;
  };

  estimateGas: {
    addDelegates(
      orgId: BytesLike,
      dids: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "addDelegates(bytes32,string[])"(
      orgId: BytesLike,
      dids: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

<<<<<<< HEAD
=======
    c_0x3bed8f0b(
      c__0x3bed8f0b: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "c_0x3bed8f0b(bytes32)"(
      c__0x3bed8f0b: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    c_0x44655cf7(
      c__0x44655cf7: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "c_0x44655cf7(bytes32)"(
      c__0x44655cf7: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    c_0xc39a2e1c(
      c__0xc39a2e1c: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "c_0xc39a2e1c(bytes32)"(
      c__0xc39a2e1c: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    c_0xf29f1bae(
      c__0xf29f1bae: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "c_0xf29f1bae(bytes32)"(
      c__0xf29f1bae: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

>>>>>>> develop
    createOrgId(
      salt: BytesLike,
      orgJsonUri: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "createOrgId(bytes32,string)"(
      salt: BytesLike,
      orgJsonUri: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDelegates(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDelegates(bytes32)"(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOrgId(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getOrgId(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getOrgIds(uint256,uint256)"(
      cursor: BigNumberish,
      count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getOrgIds()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTokenId(orgId: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getTokenId(bytes32)"(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    "name()"(overrides?: CallOverrides): Promise<BigNumber>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "removeDelegates(bytes32)"(
      orgId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "removeDelegates(bytes32,string[])"(
      orgId: BytesLike,
      dids: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setOrgJson(
      orgId: BytesLike,
      orgJsonUri: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setOrgJson(bytes32,string)"(
      orgId: BytesLike,
      orgJsonUri: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;

    "symbol()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenURI(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addDelegates(
      orgId: BytesLike,
      dids: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "addDelegates(bytes32,string[])"(
      orgId: BytesLike,
      dids: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    balanceOf(
      owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOf(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

<<<<<<< HEAD
=======
    c_0x3bed8f0b(
      c__0x3bed8f0b: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "c_0x3bed8f0b(bytes32)"(
      c__0x3bed8f0b: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    c_0x44655cf7(
      c__0x44655cf7: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "c_0x44655cf7(bytes32)"(
      c__0x44655cf7: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    c_0xc39a2e1c(
      c__0xc39a2e1c: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "c_0xc39a2e1c(bytes32)"(
      c__0xc39a2e1c: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    c_0xf29f1bae(
      c__0xf29f1bae: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "c_0xf29f1bae(bytes32)"(
      c__0xf29f1bae: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

>>>>>>> develop
    createOrgId(
      salt: BytesLike,
      orgJsonUri: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "createOrgId(bytes32,string)"(
      salt: BytesLike,
      orgJsonUri: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDelegates(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDelegates(bytes32)"(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOrgId(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOrgId(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOrgIds(uint256,uint256)"(
      cursor: BigNumberish,
      count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOrgIds()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTokenId(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTokenId(bytes32)"(
      orgId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "name()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "removeDelegates(bytes32)"(
      orgId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "removeDelegates(bytes32,string[])"(
      orgId: BytesLike,
      dids: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setOrgJson(
      orgId: BytesLike,
      orgJsonUri: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setOrgJson(bytes32,string)"(
      orgId: BytesLike,
      orgJsonUri: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "symbol()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenURI(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenURI(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalSupply()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
