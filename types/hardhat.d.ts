/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "InitializableVersion",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitializableVersion__factory>;
    getContractFactory(
      name: "IOrgIdDelegates",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOrgIdDelegates__factory>;
    getContractFactory(
      name: "IOrgIdFeat",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOrgIdFeat__factory>;
    getContractFactory(
      name: "IOrgIdRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOrgIdRegistry__factory>;
    getContractFactory(
      name: "OrgId",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OrgId__factory>;
    getContractFactory(
      name: "OrgIdDelegates",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OrgIdDelegates__factory>;
    getContractFactory(
      name: "OrgIdFeat",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OrgIdFeat__factory>;
    getContractFactory(
      name: "OrgIdRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OrgIdRegistry__factory>;
    getContractFactory(
      name: "ERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Receiver__factory>;
    getContractFactory(
      name: "OrgIdUpgradeabilityTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OrgIdUpgradeabilityTest__factory>;

    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "ERC721EnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721EnumerableUpgradeable>;
    getContractAt(
      name: "IERC721EnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721EnumerableUpgradeable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "InitializableVersion",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitializableVersion>;
    getContractAt(
      name: "IOrgIdDelegates",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOrgIdDelegates>;
    getContractAt(
      name: "IOrgIdFeat",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOrgIdFeat>;
    getContractAt(
      name: "IOrgIdRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOrgIdRegistry>;
    getContractAt(
      name: "OrgId",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OrgId>;
    getContractAt(
      name: "OrgIdDelegates",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OrgIdDelegates>;
    getContractAt(
      name: "OrgIdFeat",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OrgIdFeat>;
    getContractAt(
      name: "OrgIdRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OrgIdRegistry>;
    getContractAt(
      name: "ERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Receiver>;
    getContractAt(
      name: "OrgIdUpgradeabilityTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OrgIdUpgradeabilityTest>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
