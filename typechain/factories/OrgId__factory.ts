/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OrgId, OrgIdInterface } from "../OrgId";

const _abi = [
  {
    inputs: [],
    name: "CalledNotByOrgIdOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "OrgIdAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "OrgIdNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "OrgJsonUriEmpty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OrgIdCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "OrgJsonUriChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "createOrgId",
    outputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "getOrgId",
    outputs: [
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getOrgIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "orgIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrgIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "orgIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "setOrgJson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612257806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806342842e0e116100b857806395d89b411161007c57806395d89b41146102d1578063a22cb465146102d9578063b88d4fde146102ec578063c87b56dd146102ff578063e4f6499014610312578063e985e9c51461031a57600080fd5b806342842e0e1461027d5780634f6ccce7146102905780636352211e146102a357806370a08231146102b65780638129fc1c146102c957600080fd5b8063095ea7b31161010a578063095ea7b3146101f55780630ad0abce1461020a57806318160ddd1461023257806323b872dd146102445780632f745c591461025757806335178d911461026a57600080fd5b80630193eda61461014757806301ffc9a714610170578063037640df1461019357806306fdde03146101b5578063081812fc146101ca575b600080fd5b61015a610155366004611ed8565b610356565b6040516101679190611f84565b60405180910390f35b61018361017e366004611e9e565b61052d565b6040519015158152602001610167565b6101a66101a1366004611e09565b610558565b6040516101679392919061200a565b6101bd61062b565b6040516101679190611ff7565b6101dd6101d8366004611e09565b6106bd565b6040516001600160a01b039091168152602001610167565b610208610203366004611ddf565b610757565b005b61021d610218366004611e22565b61086d565b60408051928352602083019190915201610167565b6099545b604051908152602001610167565b610208610252366004611c8b565b6109c0565b610236610265366004611ddf565b6109f1565b610208610278366004611e22565b610a87565b61020861028b366004611c8b565b610b6d565b61023661029e366004611e09565b610b88565b6101dd6102b1366004611e09565b610c1b565b6102366102c4366004611c36565b610c92565b610208610d19565b6101bd610dd1565b6102086102e7366004611da3565b610de0565b6102086102fa366004611cc7565b610ea5565b6101bd61030d366004611e09565b610edd565b61015a610fb6565b610183610328366004611c58565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b606060008267ffffffffffffffff811115610373576103736121f5565b60405190808252806020026020018201604052801561039c578160200160208202803683370190505b509050600080855b60cb54811080156103bd57506103ba868861212e565b81105b156104535760cb81815481106103d5576103d56121df565b90600052602060002001548484815181106103f2576103f26121df565b6020026020010181815250506000801b60cb8281548110610415576104156121df565b906000526020600020015414610433578161042f81612198565b9250505b8261043d81612198565b935050808061044b90612198565b9150506103a4565b508067ffffffffffffffff81111561046d5761046d6121f5565b604051908082528060200260200182016040528015610496578160200160208202803683370190505b5093506000915060005b8351811015610523576000801b8482815181106104bf576104bf6121df565b602002602001015114610511578381815181106104de576104de6121df565b60200260200101518584815181106104f8576104f86121df565b60209081029190910101528261050d81612198565b9350505b8061051b81612198565b9150506104a0565b5050505092915050565b60006001600160e01b03198216636cea615b60e11b148061055257506105528261100d565b92915050565b600081815260c96020908152604080832054835260ca909152812080546060929182916105849061215d565b80601f01602080910402602001604051908101604052809291908181526020018280546105b09061215d565b80156105fd5780601f106105d2576101008083540402835291602001916105fd565b820191906000526020600020905b8154815290600101906020018083116105e057829003601f168201915b5050505050925060c9600085815260200190815260200160002054915061062382610c1b565b929491935050565b60606065805461063a9061215d565b80601f01602080910402602001604051908101604052809291908181526020018280546106669061215d565b80156106b35780601f10610688576101008083540402835291602001916106b3565b820191906000526020600020905b81548152906001019060200180831161069657829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b031661073b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b600061076282610c1b565b9050806001600160a01b0316836001600160a01b031614156107d05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610732565b336001600160a01b03821614806107ec57506107ec8133610328565b61085e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610732565b6108688383611032565b505050565b6000808261088e57604051633f0e0a7f60e21b815260040160405180910390fd5b6000336040516bffffffffffffffffffffffff19606083901b1660208201526034810188905290915060540160408051601f198184030181529181528151602092830120600081815260c990935291205490935015610903576040516358dc901360e01b815260048101849052602401610732565b60995461091190600161212e565b915061091d81836110a0565b600083815260c96020908152604080832085905584835260ca9091529020610946908686611b0d565b506040516001600160a01b0382169084907f49422f7ad2eca08595f1596952d2d805b5d5ba06f8c371dcb617c86a5b42ba0790600090a3827f4e0249d19860daeb2f0627d804cc93426e237cb754fef478c3a6cbcbc276265786866040516109af929190611fc8565b60405180910390a250935093915050565b6109ca33826110be565b6109e65760405162461bcd60e51b8152600401610732906120dd565b6108688383836111b5565b60006109fc83610c92565b8210610a5e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610732565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b82610aa8576040516387fe3aad60e01b815260048101849052602401610732565b80610ac657604051633f0e0a7f60e21b815260040160405180910390fd5b600083815260c960205260409020543390610ae090610c1b565b6001600160a01b031614610b0757604051635612e54f60e11b815260040160405180910390fd5b600083815260c96020908152604080832054835260ca9091529020610b2d908383611b0d565b50827f4e0249d19860daeb2f0627d804cc93426e237cb754fef478c3a6cbcbc27626578383604051610b60929190611fc8565b60405180910390a2505050565b61086883838360405180602001604052806000815250610ea5565b6000610b9360995490565b8210610bf65760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610732565b60998281548110610c0957610c096121df565b90600052602060002001549050919050565b6000818152606760205260408120546001600160a01b0316806105525760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610732565b60006001600160a01b038216610cfd5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610732565b506001600160a01b031660009081526068602052604090205490565b600054610100900460ff1680610d32575060005460ff16155b610d4e5760405162461bcd60e51b81526004016107329061208f565b600054610100900460ff16158015610d70576000805461ffff19166101011790555b610db46040518060400160405280600581526020016413d491da5160da1b8152506040518060400160405280600581526020016413d491da5160da1b815250611360565b610dbc6113e7565b8015610dce576000805461ff00191690555b50565b60606066805461063a9061215d565b6001600160a01b038216331415610e395760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610732565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610eaf33836110be565b610ecb5760405162461bcd60e51b8152600401610732906120dd565b610ed784848484611446565b50505050565b6000818152606760205260409020546060906001600160a01b0316610f18576040516306caeb1360e41b815260048101839052602401610732565b600082815260ca602052604090208054610f319061215d565b80601f0160208091040260200160405190810160405280929190818152602001828054610f5d9061215d565b8015610faa5780601f10610f7f57610100808354040283529160200191610faa565b820191906000526020600020905b815481529060010190602001808311610f8d57829003601f168201915b50505050509050919050565b606060cb8054806020026020016040519081016040528092919081815260200182805480156106b357602002820191906000526020600020905b815481526020019060010190808311610ff0575050505050905090565b60006001600160e01b0319821663780e9d6360e01b1480610552575061055282611479565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061106782610c1b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6110ba8282604051806020016040528060008152506114c9565b5050565b6000818152606760205260408120546001600160a01b03166111375760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610732565b600061114283610c1b565b9050806001600160a01b0316846001600160a01b0316148061117d5750836001600160a01b0316611172846106bd565b6001600160a01b0316145b806111ad57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166111c882610c1b565b6001600160a01b0316146112305760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610732565b6001600160a01b0382166112925760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610732565b61129d8383836114fc565b6112a8600082611032565b6001600160a01b03831660009081526068602052604081208054600192906112d1908490612146565b90915550506001600160a01b03821660009081526068602052604081208054600192906112ff90849061212e565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff1680611379575060005460ff16155b6113955760405162461bcd60e51b81526004016107329061208f565b600054610100900460ff161580156113b7576000805461ffff19166101011790555b6113bf6115b4565b6113c76115b4565b6113d1838361161e565b8015610868576000805461ff0019169055505050565b600054610100900460ff1680611400575060005460ff16155b61141c5760405162461bcd60e51b81526004016107329061208f565b600054610100900460ff1615801561143e576000805461ffff19166101011790555b610dbc6116b3565b6114518484846111b5565b61145d84848484611722565b610ed75760405162461bcd60e51b81526004016107329061203d565b60006001600160e01b031982166380ac58cd60e01b14806114aa57506001600160e01b03198216635b5e139f60e01b145b8061055257506301ffc9a760e01b6001600160e01b0319831614610552565b6114d3838361182f565b6114e06000848484611722565b6108685760405162461bcd60e51b81526004016107329061203d565b6001600160a01b0383166115575761155281609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b61157a565b816001600160a01b0316836001600160a01b03161461157a5761157a838261197d565b6001600160a01b0382166115915761086881611a1a565b826001600160a01b0316826001600160a01b031614610868576108688282611ac9565b600054610100900460ff16806115cd575060005460ff16155b6115e95760405162461bcd60e51b81526004016107329061208f565b600054610100900460ff16158015610dbc576000805461ffff19166101011790558015610dce576000805461ff001916905550565b600054610100900460ff1680611637575060005460ff16155b6116535760405162461bcd60e51b81526004016107329061208f565b600054610100900460ff16158015611675576000805461ffff19166101011790555b8251611688906065906020860190611b91565b50815161169c906066906020850190611b91565b508015610868576000805461ff0019169055505050565b600054610100900460ff16806116cc575060005460ff16155b6116e85760405162461bcd60e51b81526004016107329061208f565b600054610100900460ff1615801561170a576000805461ffff19166101011790555b6117126115b4565b61171a6115b4565b610dbc6115b4565b60006001600160a01b0384163b1561182457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611766903390899088908890600401611f47565b602060405180830381600087803b15801561178057600080fd5b505af19250505080156117b0575060408051601f3d908101601f191682019092526117ad91810190611ebb565b60015b61180a573d8080156117de576040519150601f19603f3d011682016040523d82523d6000602084013e6117e3565b606091505b5080516118025760405162461bcd60e51b81526004016107329061203d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506111ad565b506001949350505050565b6001600160a01b0382166118855760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610732565b6000818152606760205260409020546001600160a01b0316156118ea5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610732565b6118f6600083836114fc565b6001600160a01b038216600090815260686020526040812080546001929061191f90849061212e565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000600161198a84610c92565b6119949190612146565b6000838152609860205260409020549091508082146119e7576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b609954600090611a2c90600190612146565b6000838152609a602052604081205460998054939450909284908110611a5457611a546121df565b906000526020600020015490508060998381548110611a7557611a756121df565b6000918252602080832090910192909255828152609a90915260408082208490558582528120556099805480611aad57611aad6121c9565b6001900381819060005260206000200160009055905550505050565b6000611ad483610c92565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b828054611b199061215d565b90600052602060002090601f016020900481019282611b3b5760008555611b81565b82601f10611b545782800160ff19823516178555611b81565b82800160010185558215611b81579182015b82811115611b81578235825591602001919060010190611b66565b50611b8d929150611c05565b5090565b828054611b9d9061215d565b90600052602060002090601f016020900481019282611bbf5760008555611b81565b82601f10611bd857805160ff1916838001178555611b81565b82800160010185558215611b81579182015b82811115611b81578251825591602001919060010190611bea565b5b80821115611b8d5760008155600101611c06565b80356001600160a01b0381168114611c3157600080fd5b919050565b600060208284031215611c4857600080fd5b611c5182611c1a565b9392505050565b60008060408385031215611c6b57600080fd5b611c7483611c1a565b9150611c8260208401611c1a565b90509250929050565b600080600060608486031215611ca057600080fd5b611ca984611c1a565b9250611cb760208501611c1a565b9150604084013590509250925092565b60008060008060808587031215611cdd57600080fd5b611ce685611c1a565b9350611cf460208601611c1a565b925060408501359150606085013567ffffffffffffffff80821115611d1857600080fd5b818701915087601f830112611d2c57600080fd5b813581811115611d3e57611d3e6121f5565b604051601f8201601f19908116603f01168101908382118183101715611d6657611d666121f5565b816040528281528a6020848701011115611d7f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611db657600080fd5b611dbf83611c1a565b915060208301358015158114611dd457600080fd5b809150509250929050565b60008060408385031215611df257600080fd5b611dfb83611c1a565b946020939093013593505050565b600060208284031215611e1b57600080fd5b5035919050565b600080600060408486031215611e3757600080fd5b83359250602084013567ffffffffffffffff80821115611e5657600080fd5b818601915086601f830112611e6a57600080fd5b813581811115611e7957600080fd5b876020828501011115611e8b57600080fd5b6020830194508093505050509250925092565b600060208284031215611eb057600080fd5b8135611c518161220b565b600060208284031215611ecd57600080fd5b8151611c518161220b565b60008060408385031215611eeb57600080fd5b50508035926020909101359150565b6000815180845260005b81811015611f2057602081850181015186830182015201611f04565b81811115611f32576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f7a90830184611efa565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611fbc57835183529284019291840191600101611fa0565b50909695505050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b602081526000611c516020830184611efa565b60608152600061201d6060830186611efa565b6020830194909452506001600160a01b0391909116604090910152919050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115612141576121416121b3565b500190565b600082821015612158576121586121b3565b500390565b600181811c9082168061217157607f821691505b6020821081141561219257634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156121ac576121ac6121b3565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610dce57600080fdfea2646970667358221220aeb0fee322501834eacfee8ea12f1f6c0a44edb72c90dcada82ac88579ecfbf964736f6c63430008070033";

export class OrgId__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OrgId> {
    return super.deploy(overrides || {}) as Promise<OrgId>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OrgId {
    return super.attach(address) as OrgId;
  }
  connect(signer: Signer): OrgId__factory {
    return super.connect(signer) as OrgId__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrgIdInterface {
    return new utils.Interface(_abi) as OrgIdInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OrgId {
    return new Contract(address, _abi, signerOrProvider) as OrgId;
  }
}
