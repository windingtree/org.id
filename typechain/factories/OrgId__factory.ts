/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OrgId, OrgIdInterface } from "../OrgId";

const _abi = [
  {
    inputs: [],
    name: "CalledNotByOrgIdOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "OrgIdAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "OrgIdNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "OrgJsonUriEmpty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OrgIdCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "OrgJsonUriChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "createOrgId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "getOrgId",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getOrgIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "orgIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrgIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "orgIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "setOrgJson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612285806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806342842e0e116100b857806395d89b411161007c57806395d89b41146102bd578063a22cb465146102c5578063b88d4fde146102d8578063c87b56dd146102eb578063e4f64990146102fe578063e985e9c51461030657600080fd5b806342842e0e146102695780634f6ccce71461027c5780636352211e1461028f57806370a08231146102a25780638129fc1c146102b557600080fd5b8063095ea7b31161010a578063095ea7b3146101f65780630ad0abce1461020b57806318160ddd1461021e57806323b872dd146102305780632f745c591461024357806335178d911461025657600080fd5b80630193eda61461014757806301ffc9a714610170578063037640df1461019357806306fdde03146101b6578063081812fc146101cb575b600080fd5b61015a610155366004611f28565b610342565b6040516101679190611fd4565b60405180910390f35b61018361017e366004611eee565b610519565b6040519015158152602001610167565b6101a66101a1366004611e59565b610544565b6040516101679493929190612018565b6101be61062b565b6040516101679190612081565b6101de6101d9366004611e59565b6106bd565b6040516001600160a01b039091168152602001610167565b610209610204366004611e2f565b610757565b005b610209610219366004611e72565b61086d565b6099545b604051908152602001610167565b61020961023e366004611cdb565b6109f7565b610222610251366004611e2f565b610a28565b610209610264366004611e72565b610abe565b610209610277366004611cdb565b610bbd565b61022261028a366004611e59565b610bd8565b6101de61029d366004611e59565b610c6b565b6102226102b0366004611c86565b610ce2565b610209610d69565b6101be610e21565b6102096102d3366004611df3565b610e30565b6102096102e6366004611d17565b610ef5565b6101be6102f9366004611e59565b610f2d565b61015a611006565b610183610314366004611ca8565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b606060008267ffffffffffffffff81111561035f5761035f61224c565b604051908082528060200260200182016040528015610388578160200160208202803683370190505b509050600080855b60cb54811080156103a957506103a68688612185565b81105b1561043f5760cb81815481106103c1576103c1612236565b90600052602060002001548484815181106103de576103de612236565b6020026020010181815250506000801b60cb828154811061040157610401612236565b90600052602060002001541461041f578161041b816121ef565b9250505b82610429816121ef565b9350508080610437906121ef565b915050610390565b508067ffffffffffffffff8111156104595761045961224c565b604051908082528060200260200182016040528015610482578160200160208202803683370190505b5093506000915060005b835181101561050f576000801b8482815181106104ab576104ab612236565b6020026020010151146104fd578381815181106104ca576104ca612236565b60200260200101518584815181106104e4576104e4612236565b6020908102919091010152826104f9816121ef565b9350505b80610507816121ef565b91505061048c565b5050505092915050565b60006001600160e01b03198216636cea615b60e11b148061053e575061053e8261105d565b92915050565b600081815260c96020526040812054606082610577836000908152606760205260409020546001600160a01b0316151590565b9350831561062457600083815260ca602052604090208054610598906121b4565b80601f01602080910402602001604051908101604052809291908181526020018280546105c4906121b4565b80156106115780601f106105e657610100808354040283529160200191610611565b820191906000526020600020905b8154815290600101906020018083116105f457829003601f168201915b5050505050915061062183610c6b565b90505b9193509193565b60606065805461063a906121b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610666906121b4565b80156106b35780601f10610688576101008083540402835291602001916106b3565b820191906000526020600020905b81548152906001019060200180831161069657829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b031661073b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b600061076282610c6b565b9050806001600160a01b0316836001600160a01b031614156107d05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610732565b336001600160a01b03821614806107ec57506107ec8133610314565b61085e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610732565b6108688383611082565b505050565b8061088b57604051633f0e0a7f60e21b815260040160405180910390fd5b6000336040516bffffffffffffffffffffffff19606083901b1660208201526034810186905290915060009060540160408051601f19818403018152918152815160209283012060cb8054600181019091557fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb01819055600081815260c990935291205490915015610933576040516358dc901360e01b815260048101829052602401610732565b600061093e60995490565b610949906001612185565b905061095583826110f0565b600082815260c96020908152604080832084905583835260ca909152902061097e908686611b5d565b506040516001600160a01b0384169083907f49422f7ad2eca08595f1596952d2d805b5d5ba06f8c371dcb617c86a5b42ba0790600090a3817f4e0249d19860daeb2f0627d804cc93426e237cb754fef478c3a6cbcbc276265786866040516109e7929190612052565b60405180910390a2505050505050565b610a01338261110e565b610a1d5760405162461bcd60e51b815260040161073290612134565b610868838383611205565b6000610a3383610ce2565b8210610a955760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610732565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b821580610ad75750600083815260c96020526040902054155b15610af8576040516387fe3aad60e01b815260048101849052602401610732565b80610b1657604051633f0e0a7f60e21b815260040160405180910390fd5b600083815260c960205260409020543390610b3090610c6b565b6001600160a01b031614610b5757604051635612e54f60e11b815260040160405180910390fd5b600083815260c96020908152604080832054835260ca9091529020610b7d908383611b5d565b50827f4e0249d19860daeb2f0627d804cc93426e237cb754fef478c3a6cbcbc27626578383604051610bb0929190612052565b60405180910390a2505050565b61086883838360405180602001604052806000815250610ef5565b6000610be360995490565b8210610c465760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610732565b60998281548110610c5957610c59612236565b90600052602060002001549050919050565b6000818152606760205260408120546001600160a01b03168061053e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610732565b60006001600160a01b038216610d4d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610732565b506001600160a01b031660009081526068602052604090205490565b600054610100900460ff1680610d82575060005460ff16155b610d9e5760405162461bcd60e51b8152600401610732906120e6565b600054610100900460ff16158015610dc0576000805461ffff19166101011790555b610e046040518060400160405280600581526020016413d491da5160da1b8152506040518060400160405280600581526020016413d491da5160da1b8152506113b0565b610e0c611437565b8015610e1e576000805461ff00191690555b50565b60606066805461063a906121b4565b6001600160a01b038216331415610e895760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610732565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610eff338361110e565b610f1b5760405162461bcd60e51b815260040161073290612134565b610f2784848484611496565b50505050565b6000818152606760205260409020546060906001600160a01b0316610f68576040516306caeb1360e41b815260048101839052602401610732565b600082815260ca602052604090208054610f81906121b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610fad906121b4565b8015610ffa5780601f10610fcf57610100808354040283529160200191610ffa565b820191906000526020600020905b815481529060010190602001808311610fdd57829003601f168201915b50505050509050919050565b606060cb8054806020026020016040519081016040528092919081815260200182805480156106b357602002820191906000526020600020905b815481526020019060010190808311611040575050505050905090565b60006001600160e01b0319821663780e9d6360e01b148061053e575061053e826114c9565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906110b782610c6b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61110a828260405180602001604052806000815250611519565b5050565b6000818152606760205260408120546001600160a01b03166111875760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610732565b600061119283610c6b565b9050806001600160a01b0316846001600160a01b031614806111cd5750836001600160a01b03166111c2846106bd565b6001600160a01b0316145b806111fd57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661121882610c6b565b6001600160a01b0316146112805760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610732565b6001600160a01b0382166112e25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610732565b6112ed83838361154c565b6112f8600082611082565b6001600160a01b038316600090815260686020526040812080546001929061132190849061219d565b90915550506001600160a01b038216600090815260686020526040812080546001929061134f908490612185565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff16806113c9575060005460ff16155b6113e55760405162461bcd60e51b8152600401610732906120e6565b600054610100900460ff16158015611407576000805461ffff19166101011790555b61140f611604565b611417611604565b611421838361166e565b8015610868576000805461ff0019169055505050565b600054610100900460ff1680611450575060005460ff16155b61146c5760405162461bcd60e51b8152600401610732906120e6565b600054610100900460ff1615801561148e576000805461ffff19166101011790555b610e0c611703565b6114a1848484611205565b6114ad84848484611772565b610f275760405162461bcd60e51b815260040161073290612094565b60006001600160e01b031982166380ac58cd60e01b14806114fa57506001600160e01b03198216635b5e139f60e01b145b8061053e57506301ffc9a760e01b6001600160e01b031983161461053e565b611523838361187f565b6115306000848484611772565b6108685760405162461bcd60e51b815260040161073290612094565b6001600160a01b0383166115a7576115a281609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b6115ca565b816001600160a01b0316836001600160a01b0316146115ca576115ca83826119cd565b6001600160a01b0382166115e15761086881611a6a565b826001600160a01b0316826001600160a01b031614610868576108688282611b19565b600054610100900460ff168061161d575060005460ff16155b6116395760405162461bcd60e51b8152600401610732906120e6565b600054610100900460ff16158015610e0c576000805461ffff19166101011790558015610e1e576000805461ff001916905550565b600054610100900460ff1680611687575060005460ff16155b6116a35760405162461bcd60e51b8152600401610732906120e6565b600054610100900460ff161580156116c5576000805461ffff19166101011790555b82516116d8906065906020860190611be1565b5081516116ec906066906020850190611be1565b508015610868576000805461ff0019169055505050565b600054610100900460ff168061171c575060005460ff16155b6117385760405162461bcd60e51b8152600401610732906120e6565b600054610100900460ff1615801561175a576000805461ffff19166101011790555b611762611604565b61176a611604565b610e0c611604565b60006001600160a01b0384163b1561187457604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906117b6903390899088908890600401611f97565b602060405180830381600087803b1580156117d057600080fd5b505af1925050508015611800575060408051601f3d908101601f191682019092526117fd91810190611f0b565b60015b61185a573d80801561182e576040519150601f19603f3d011682016040523d82523d6000602084013e611833565b606091505b5080516118525760405162461bcd60e51b815260040161073290612094565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506111fd565b506001949350505050565b6001600160a01b0382166118d55760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610732565b6000818152606760205260409020546001600160a01b03161561193a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610732565b6119466000838361154c565b6001600160a01b038216600090815260686020526040812080546001929061196f908490612185565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060016119da84610ce2565b6119e4919061219d565b600083815260986020526040902054909150808214611a37576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b609954600090611a7c9060019061219d565b6000838152609a602052604081205460998054939450909284908110611aa457611aa4612236565b906000526020600020015490508060998381548110611ac557611ac5612236565b6000918252602080832090910192909255828152609a90915260408082208490558582528120556099805480611afd57611afd612220565b6001900381819060005260206000200160009055905550505050565b6000611b2483610ce2565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b828054611b69906121b4565b90600052602060002090601f016020900481019282611b8b5760008555611bd1565b82601f10611ba45782800160ff19823516178555611bd1565b82800160010185558215611bd1579182015b82811115611bd1578235825591602001919060010190611bb6565b50611bdd929150611c55565b5090565b828054611bed906121b4565b90600052602060002090601f016020900481019282611c0f5760008555611bd1565b82601f10611c2857805160ff1916838001178555611bd1565b82800160010185558215611bd1579182015b82811115611bd1578251825591602001919060010190611c3a565b5b80821115611bdd5760008155600101611c56565b80356001600160a01b0381168114611c8157600080fd5b919050565b600060208284031215611c9857600080fd5b611ca182611c6a565b9392505050565b60008060408385031215611cbb57600080fd5b611cc483611c6a565b9150611cd260208401611c6a565b90509250929050565b600080600060608486031215611cf057600080fd5b611cf984611c6a565b9250611d0760208501611c6a565b9150604084013590509250925092565b60008060008060808587031215611d2d57600080fd5b611d3685611c6a565b9350611d4460208601611c6a565b925060408501359150606085013567ffffffffffffffff80821115611d6857600080fd5b818701915087601f830112611d7c57600080fd5b813581811115611d8e57611d8e61224c565b604051601f8201601f19908116603f01168101908382118183101715611db657611db661224c565b816040528281528a6020848701011115611dcf57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611e0657600080fd5b611e0f83611c6a565b915060208301358015158114611e2457600080fd5b809150509250929050565b60008060408385031215611e4257600080fd5b611e4b83611c6a565b946020939093013593505050565b600060208284031215611e6b57600080fd5b5035919050565b600080600060408486031215611e8757600080fd5b83359250602084013567ffffffffffffffff80821115611ea657600080fd5b818601915086601f830112611eba57600080fd5b813581811115611ec957600080fd5b876020828501011115611edb57600080fd5b6020830194508093505050509250925092565b600060208284031215611f0057600080fd5b8135611ca181612262565b600060208284031215611f1d57600080fd5b8151611ca181612262565b60008060408385031215611f3b57600080fd5b50508035926020909101359150565b6000815180845260005b81811015611f7057602081850181015186830182015201611f54565b81811115611f82576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611fca90830184611f4a565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561200c57835183529284019291840191600101611ff0565b50909695505050505050565b84151581528360208201526080604082015260006120396080830185611f4a565b905060018060a01b038316606083015295945050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b602081526000611ca16020830184611f4a565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156121985761219861220a565b500190565b6000828210156121af576121af61220a565b500390565b600181811c908216806121c857607f821691505b602082108114156121e957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156122035761220361220a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610e1e57600080fdfea164736f6c6343000807000a";

export class OrgId__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OrgId> {
    return super.deploy(overrides || {}) as Promise<OrgId>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OrgId {
    return super.attach(address) as OrgId;
  }
  connect(signer: Signer): OrgId__factory {
    return super.connect(signer) as OrgId__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrgIdInterface {
    return new utils.Interface(_abi) as OrgIdInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OrgId {
    return new Contract(address, _abi, signerOrProvider) as OrgId;
  }
}
