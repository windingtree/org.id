/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OrgId, OrgIdInterface } from "../OrgId";

const _abi = [
  {
    inputs: [],
    name: "CalledNotByOrgIdOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "versionDomain",
        type: "bytes32",
      },
    ],
    name: "ContractAlreadyInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "OrgIdAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "OrgIdNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "OrgJsonUriEmpty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OrgIdCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "OrgJsonUriChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "createOrgId",
    outputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getOrgIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "orgIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrgIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "orgIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "getOrgJsonUri",
    outputs: [
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "getTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "setOrgJson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506121d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806342842e0e116100c3578063a22cb4651161007c578063a22cb465146102d5578063b88d4fde146102e8578063c87b56dd146102fb578063c9cb65e11461030e578063e4f649901461032e578063e985e9c51461033657600080fd5b806342842e0e146102795780634f6ccce71461028c5780636352211e1461029f57806370a08231146102b25780638129fc1c146102c557806395d89b41146102cd57600080fd5b80630ad0abce116101155780630ad0abce146101f357806316bb410b1461021b57806318160ddd1461022e57806323b872dd146102405780632f745c591461025357806335178d911461026657600080fd5b80630193eda61461015257806301ffc9a71461017b57806306fdde031461019e578063081812fc146101b3578063095ea7b3146101de575b600080fd5b610165610160366004611e88565b610372565b6040516101729190611f34565b60405180910390f35b61018e610189366004611e4e565b610549565b6040519015158152602001610172565b6101a661055a565b6040516101729190611fa7565b6101c66101c1366004611db9565b6105ec565b6040516001600160a01b039091168152602001610172565b6101f16101ec366004611d8f565b610686565b005b610206610201366004611dd2565b61079c565b60408051928352602083019190915201610172565b6101a6610229366004611db9565b6108e4565b60cc545b604051908152602001610172565b6101f161024e366004611c3b565b610993565b610232610261366004611d8f565b6109c4565b6101f1610274366004611dd2565b610a5a565b6101f1610287366004611c3b565b610b40565b61023261029a366004611db9565b610b5b565b6101c66102ad366004611db9565b610bee565b6102326102c0366004611be6565b610c65565b6101f1610cec565b6101a6610dc1565b6101f16102e3366004611d53565b610dd0565b6101f16102f6366004611c77565b610e95565b6101a6610309366004611db9565b610ecd565b61023261031c366004611db9565b600090815260fc602052604090205490565b610165610f21565b61018e610344366004611c08565b6001600160a01b039182166000908152609d6020908152604080832093909416825291909152205460ff1690565b606060008267ffffffffffffffff81111561038f5761038f612172565b6040519080825280602002602001820160405280156103b8578160200160208202803683370190505b509050600080855b60fe54811080156103d957506103d686886120ab565b81105b1561046f5760fe81815481106103f1576103f161215c565b906000526020600020015484848151811061040e5761040e61215c565b6020026020010181815250506000801b60fe82815481106104315761043161215c565b90600052602060002001541461044f578161044b81612115565b9250505b8261045981612115565b935050808061046790612115565b9150506103c0565b508067ffffffffffffffff81111561048957610489612172565b6040519080825280602002602001820160405280156104b2578160200160208202803683370190505b5093506000915060005b835181101561053f576000801b8482815181106104db576104db61215c565b60200260200101511461052d578381815181106104fa576104fa61215c565b60200260200101518584815181106105145761051461215c565b60209081029190910101528261052981612115565b9350505b8061053781612115565b9150506104bc565b5050505092915050565b600061055482610f78565b92915050565b606060988054610569906120da565b80601f0160208091040260200160405190810160405280929190818152602001828054610595906120da565b80156105e25780601f106105b7576101008083540402835291602001916105e2565b820191906000526020600020905b8154815290600101906020018083116105c557829003601f168201915b5050505050905090565b6000818152609a60205260408120546001600160a01b031661066a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152609c60205260409020546001600160a01b031690565b600061069182610bee565b9050806001600160a01b0316836001600160a01b031614156106ff5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610661565b336001600160a01b038216148061071b575061071b8133610344565b61078d5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610661565b6107978383610f9d565b505050565b600080826107bd57604051633f0e0a7f60e21b815260040160405180910390fd5b6000336040516bffffffffffffffffffffffff19606083901b1660208201526034810188905290915060540160408051601f198184030181529181528151602092830120600081815260fc90935291205490935015610832576040516358dc901360e01b815260048101849052602401610661565b60cc549150610841818361100b565b600083815260fc6020908152604080832085905584835260fd909152902061086a908686611abd565b506040516001600160a01b0382169084907f49422f7ad2eca08595f1596952d2d805b5d5ba06f8c371dcb617c86a5b42ba0790600090a3827f4e0249d19860daeb2f0627d804cc93426e237cb754fef478c3a6cbcbc276265786866040516108d3929190611f78565b60405180910390a250935093915050565b600081815260fc6020908152604080832054835260fd909152902080546060919061090e906120da565b80601f016020809104026020016040519081016040528092919081815260200182805461093a906120da565b80156109875780601f1061095c57610100808354040283529160200191610987565b820191906000526020600020905b81548152906001019060200180831161096a57829003601f168201915b50505050509050919050565b61099d3382611029565b6109b95760405162461bcd60e51b81526004016106619061205a565b610797838383611120565b60006109cf83610c65565b8210610a315760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610661565b506001600160a01b0391909116600090815260ca60209081526040808320938352929052205490565b82610a7b576040516387fe3aad60e01b815260048101849052602401610661565b80610a9957604051633f0e0a7f60e21b815260040160405180910390fd5b600083815260fc60205260409020543390610ab390610bee565b6001600160a01b031614610ada57604051635612e54f60e11b815260040160405180910390fd5b600083815260fc6020908152604080832054835260fd9091529020610b00908383611abd565b50827f4e0249d19860daeb2f0627d804cc93426e237cb754fef478c3a6cbcbc27626578383604051610b33929190611f78565b60405180910390a2505050565b61079783838360405180602001604052806000815250610e95565b6000610b6660cc5490565b8210610bc95760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610661565b60cc8281548110610bdc57610bdc61215c565b90600052602060002001549050919050565b6000818152609a60205260408120546001600160a01b0316806105545760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610661565b60006001600160a01b038216610cd05760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610661565b506001600160a01b03166000908152609b602052604090205490565b7f05f0107db38841db143a7870b90cd383410021ad24b1b632d7c9400855db33e060008181526020527f921732d4750d32d4eaa4e9bcda36bbfe1acd014af01d4c4abc0fd8bcb5fa18e75460ff1615610d5a57604051625c34b160e11b815260048101829052602401610661565b610d9e6040518060400160405280600581526020016413d491da5160da1b8152506040518060400160405280600581526020016413d491da5160da1b8152506112cb565b610da6611352565b6000908152602081905260409020805460ff19166001179055565b606060998054610569906120da565b6001600160a01b038216331415610e295760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610661565b336000818152609d602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610e9f3383611029565b610ebb5760405162461bcd60e51b81526004016106619061205a565b610ec7848484846113c6565b50505050565b6000818152609a60205260409020546060906001600160a01b0316610f08576040516306caeb1360e41b815260048101839052602401610661565b600082815260fd60205260409020805461090e906120da565b606060fe8054806020026020016040519081016040528092919081815260200182805480156105e257602002820191906000526020600020905b815481526020019060010190808311610f5b575050505050905090565b60006001600160e01b031982166305d2a68360e01b14806105545750610554826113f9565b6000818152609c6020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610fd282610bee565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61102582826040518060200160405280600081525061141e565b5050565b6000818152609a60205260408120546001600160a01b03166110a25760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610661565b60006110ad83610bee565b9050806001600160a01b0316846001600160a01b031614806110e85750836001600160a01b03166110dd846105ec565b6001600160a01b0316145b8061111857506001600160a01b038082166000908152609d602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661113382610bee565b6001600160a01b03161461119b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610661565b6001600160a01b0382166111fd5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610661565b611208838383611451565b611213600082610f9d565b6001600160a01b0383166000908152609b6020526040812080546001929061123c9084906120c3565b90915550506001600160a01b0382166000908152609b6020526040812080546001929061126a9084906120ab565b90915550506000818152609a602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b603354610100900460ff16806112e4575060335460ff16155b6113005760405162461bcd60e51b81526004016106619061200c565b603354610100900460ff16158015611322576033805461ffff19166101011790555b61132a61145c565b61133261145c565b61133c83836114c6565b8015610797576033805461ff0019169055505050565b603354610100900460ff168061136b575060335460ff16155b6113875760405162461bcd60e51b81526004016106619061200c565b603354610100900460ff161580156113a9576033805461ffff19166101011790555b6113b161155b565b80156113c3576033805461ff00191690555b50565b6113d1848484611120565b6113dd848484846115ca565b610ec75760405162461bcd60e51b815260040161066190611fba565b60006001600160e01b0319821663780e9d6360e01b14806105545750610554826116d7565b6114288383611727565b61143560008484846115ca565b6107975760405162461bcd60e51b815260040161066190611fba565b610797838383611875565b603354610100900460ff1680611475575060335460ff16155b6114915760405162461bcd60e51b81526004016106619061200c565b603354610100900460ff161580156113b1576033805461ffff191661010117905580156113c3576033805461ff001916905550565b603354610100900460ff16806114df575060335460ff16155b6114fb5760405162461bcd60e51b81526004016106619061200c565b603354610100900460ff1615801561151d576033805461ffff19166101011790555b8251611530906098906020860190611b41565b508151611544906099906020850190611b41565b508015610797576033805461ff0019169055505050565b603354610100900460ff1680611574575060335460ff16155b6115905760405162461bcd60e51b81526004016106619061200c565b603354610100900460ff161580156115b2576033805461ffff19166101011790555b6115ba61145c565b6115c261145c565b6113b161145c565b60006001600160a01b0384163b156116cc57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061160e903390899088908890600401611ef7565b602060405180830381600087803b15801561162857600080fd5b505af1925050508015611658575060408051601f3d908101601f1916820190925261165591810190611e6b565b60015b6116b2573d808015611686576040519150601f19603f3d011682016040523d82523d6000602084013e61168b565b606091505b5080516116aa5760405162461bcd60e51b815260040161066190611fba565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611118565b506001949350505050565b60006001600160e01b031982166380ac58cd60e01b148061170857506001600160e01b03198216635b5e139f60e01b145b8061055457506301ffc9a760e01b6001600160e01b0319831614610554565b6001600160a01b03821661177d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610661565b6000818152609a60205260409020546001600160a01b0316156117e25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610661565b6117ee60008383611451565b6001600160a01b0382166000908152609b602052604081208054600192906118179084906120ab565b90915550506000818152609a602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0383166118d0576118cb8160cc8054600083815260cd60205260408120829055600182018355919091527f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe0155565b6118f3565b816001600160a01b0316836001600160a01b0316146118f3576118f3838261192d565b6001600160a01b03821661190a57610797816119ca565b826001600160a01b0316826001600160a01b031614610797576107978282611a79565b6000600161193a84610c65565b61194491906120c3565b600083815260cb6020526040902054909150808214611997576001600160a01b038416600090815260ca60209081526040808320858452825280832054848452818420819055835260cb90915290208190555b50600091825260cb602090815260408084208490556001600160a01b03909416835260ca81528383209183525290812055565b60cc546000906119dc906001906120c3565b600083815260cd602052604081205460cc8054939450909284908110611a0457611a0461215c565b906000526020600020015490508060cc8381548110611a2557611a2561215c565b600091825260208083209091019290925582815260cd909152604080822084905585825281205560cc805480611a5d57611a5d612146565b6001900381819060005260206000200160009055905550505050565b6000611a8483610c65565b6001600160a01b03909316600090815260ca60209081526040808320868452825280832085905593825260cb9052919091209190915550565b828054611ac9906120da565b90600052602060002090601f016020900481019282611aeb5760008555611b31565b82601f10611b045782800160ff19823516178555611b31565b82800160010185558215611b31579182015b82811115611b31578235825591602001919060010190611b16565b50611b3d929150611bb5565b5090565b828054611b4d906120da565b90600052602060002090601f016020900481019282611b6f5760008555611b31565b82601f10611b8857805160ff1916838001178555611b31565b82800160010185558215611b31579182015b82811115611b31578251825591602001919060010190611b9a565b5b80821115611b3d5760008155600101611bb6565b80356001600160a01b0381168114611be157600080fd5b919050565b600060208284031215611bf857600080fd5b611c0182611bca565b9392505050565b60008060408385031215611c1b57600080fd5b611c2483611bca565b9150611c3260208401611bca565b90509250929050565b600080600060608486031215611c5057600080fd5b611c5984611bca565b9250611c6760208501611bca565b9150604084013590509250925092565b60008060008060808587031215611c8d57600080fd5b611c9685611bca565b9350611ca460208601611bca565b925060408501359150606085013567ffffffffffffffff80821115611cc857600080fd5b818701915087601f830112611cdc57600080fd5b813581811115611cee57611cee612172565b604051601f8201601f19908116603f01168101908382118183101715611d1657611d16612172565b816040528281528a6020848701011115611d2f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611d6657600080fd5b611d6f83611bca565b915060208301358015158114611d8457600080fd5b809150509250929050565b60008060408385031215611da257600080fd5b611dab83611bca565b946020939093013593505050565b600060208284031215611dcb57600080fd5b5035919050565b600080600060408486031215611de757600080fd5b83359250602084013567ffffffffffffffff80821115611e0657600080fd5b818601915086601f830112611e1a57600080fd5b813581811115611e2957600080fd5b876020828501011115611e3b57600080fd5b6020830194508093505050509250925092565b600060208284031215611e6057600080fd5b8135611c0181612188565b600060208284031215611e7d57600080fd5b8151611c0181612188565b60008060408385031215611e9b57600080fd5b50508035926020909101359150565b6000815180845260005b81811015611ed057602081850181015186830182015201611eb4565b81811115611ee2576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f2a90830184611eaa565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611f6c57835183529284019291840191600101611f50565b50909695505050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b602081526000611c016020830184611eaa565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156120be576120be612130565b500190565b6000828210156120d5576120d5612130565b500390565b600181811c908216806120ee57607f821691505b6020821081141561210f57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561212957612129612130565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146113c357600080fdfea2646970667358221220a74c896d9d7c0c827b8f23c981ab9707ec0e085fa122989c05869b107e0bbcac64736f6c63430008070033";

export class OrgId__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OrgId> {
    return super.deploy(overrides || {}) as Promise<OrgId>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OrgId {
    return super.attach(address) as OrgId;
  }
  connect(signer: Signer): OrgId__factory {
    return super.connect(signer) as OrgId__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrgIdInterface {
    return new utils.Interface(_abi) as OrgIdInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OrgId {
    return new Contract(address, _abi, signerOrProvider) as OrgId;
  }
}
