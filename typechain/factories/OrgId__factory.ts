/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OrgId, OrgIdInterface } from "../OrgId";

const _abi = [
  {
    inputs: [],
    name: "CalledNotByOrgIdOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "OrgIdAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "OrgIdNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "OrgJsonUriEmpty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OrgIdCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "OrgJsonUriChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "createOrgId",
    outputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getOrgIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "orgIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrgIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "orgIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "getOrgJsonUri",
    outputs: [
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
    ],
    name: "getTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "orgJsonUri",
        type: "string",
      },
    ],
    name: "setOrgJson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612197806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806342842e0e116100c3578063a22cb4651161007c578063a22cb465146102d5578063b88d4fde146102e8578063c87b56dd146102fb578063c9cb65e11461030e578063e4f649901461032e578063e985e9c51461033657600080fd5b806342842e0e146102795780634f6ccce71461028c5780636352211e1461029f57806370a08231146102b25780638129fc1c146102c557806395d89b41146102cd57600080fd5b80630ad0abce116101155780630ad0abce146101f357806316bb410b1461021b57806318160ddd1461022e57806323b872dd146102405780632f745c591461025357806335178d911461026657600080fd5b80630193eda61461015257806301ffc9a71461017b57806306fdde031461019e578063081812fc146101b3578063095ea7b3146101de575b600080fd5b610165610160366004611e4b565b610372565b6040516101729190611ef7565b60405180910390f35b61018e610189366004611e11565b610549565b6040519015158152602001610172565b6101a6610574565b6040516101729190611f6a565b6101c66101c1366004611d7c565b610606565b6040516001600160a01b039091168152602001610172565b6101f16101ec366004611d52565b6106a0565b005b610206610201366004611d95565b6107b6565b60408051928352602083019190915201610172565b6101a6610229366004611d7c565b610909565b6099545b604051908152602001610172565b6101f161024e366004611bfe565b6109b8565b610232610261366004611d52565b6109e9565b6101f1610274366004611d95565b610a7f565b6101f1610287366004611bfe565b610b65565b61023261029a366004611d7c565b610b80565b6101c66102ad366004611d7c565b610c13565b6102326102c0366004611ba9565b610c8a565b6101f1610d11565b6101a6610dc9565b6101f16102e3366004611d16565b610dd8565b6101f16102f6366004611c3a565b610e9d565b6101a6610309366004611d7c565b610ed5565b61023261031c366004611d7c565b600090815260c9602052604090205490565b610165610f29565b61018e610344366004611bcb565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b606060008267ffffffffffffffff81111561038f5761038f612135565b6040519080825280602002602001820160405280156103b8578160200160208202803683370190505b509050600080855b60cb54811080156103d957506103d6868861206e565b81105b1561046f5760cb81815481106103f1576103f161211f565b906000526020600020015484848151811061040e5761040e61211f565b6020026020010181815250506000801b60cb82815481106104315761043161211f565b90600052602060002001541461044f578161044b816120d8565b9250505b82610459816120d8565b9350508080610467906120d8565b9150506103c0565b508067ffffffffffffffff81111561048957610489612135565b6040519080825280602002602001820160405280156104b2578160200160208202803683370190505b5093506000915060005b835181101561053f576000801b8482815181106104db576104db61211f565b60200260200101511461052d578381815181106104fa576104fa61211f565b60200260200101518584815181106105145761051461211f565b602090810291909101015282610529816120d8565b9350505b80610537816120d8565b9150506104bc565b5050505092915050565b60006001600160e01b031982166305d2a68360e01b148061056e575061056e82610f80565b92915050565b6060606580546105839061209d565b80601f01602080910402602001604051908101604052809291908181526020018280546105af9061209d565b80156105fc5780601f106105d1576101008083540402835291602001916105fc565b820191906000526020600020905b8154815290600101906020018083116105df57829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166106845760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006106ab82610c13565b9050806001600160a01b0316836001600160a01b031614156107195760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161067b565b336001600160a01b038216148061073557506107358133610344565b6107a75760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161067b565b6107b18383610fa5565b505050565b600080826107d757604051633f0e0a7f60e21b815260040160405180910390fd5b6000336040516bffffffffffffffffffffffff19606083901b1660208201526034810188905290915060540160408051601f198184030181529181528151602092830120600081815260c99093529120549093501561084c576040516358dc901360e01b81526004810184905260240161067b565b60995461085a90600161206e565b91506108668183611013565b600083815260c96020908152604080832085905584835260ca909152902061088f908686611a80565b506040516001600160a01b0382169084907f49422f7ad2eca08595f1596952d2d805b5d5ba06f8c371dcb617c86a5b42ba0790600090a3827f4e0249d19860daeb2f0627d804cc93426e237cb754fef478c3a6cbcbc276265786866040516108f8929190611f3b565b60405180910390a250935093915050565b600081815260c96020908152604080832054835260ca90915290208054606091906109339061209d565b80601f016020809104026020016040519081016040528092919081815260200182805461095f9061209d565b80156109ac5780601f10610981576101008083540402835291602001916109ac565b820191906000526020600020905b81548152906001019060200180831161098f57829003601f168201915b50505050509050919050565b6109c23382611031565b6109de5760405162461bcd60e51b815260040161067b9061201d565b6107b1838383611128565b60006109f483610c8a565b8210610a565760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161067b565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b82610aa0576040516387fe3aad60e01b81526004810184905260240161067b565b80610abe57604051633f0e0a7f60e21b815260040160405180910390fd5b600083815260c960205260409020543390610ad890610c13565b6001600160a01b031614610aff57604051635612e54f60e11b815260040160405180910390fd5b600083815260c96020908152604080832054835260ca9091529020610b25908383611a80565b50827f4e0249d19860daeb2f0627d804cc93426e237cb754fef478c3a6cbcbc27626578383604051610b58929190611f3b565b60405180910390a2505050565b6107b183838360405180602001604052806000815250610e9d565b6000610b8b60995490565b8210610bee5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161067b565b60998281548110610c0157610c0161211f565b90600052602060002001549050919050565b6000818152606760205260408120546001600160a01b03168061056e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161067b565b60006001600160a01b038216610cf55760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161067b565b506001600160a01b031660009081526068602052604090205490565b600054610100900460ff1680610d2a575060005460ff16155b610d465760405162461bcd60e51b815260040161067b90611fcf565b600054610100900460ff16158015610d68576000805461ffff19166101011790555b610dac6040518060400160405280600581526020016413d491da5160da1b8152506040518060400160405280600581526020016413d491da5160da1b8152506112d3565b610db461135a565b8015610dc6576000805461ff00191690555b50565b6060606680546105839061209d565b6001600160a01b038216331415610e315760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161067b565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610ea73383611031565b610ec35760405162461bcd60e51b815260040161067b9061201d565b610ecf848484846113b9565b50505050565b6000818152606760205260409020546060906001600160a01b0316610f10576040516306caeb1360e41b81526004810183905260240161067b565b600082815260ca6020526040902080546109339061209d565b606060cb8054806020026020016040519081016040528092919081815260200182805480156105fc57602002820191906000526020600020905b815481526020019060010190808311610f63575050505050905090565b60006001600160e01b0319821663780e9d6360e01b148061056e575061056e826113ec565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610fda82610c13565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61102d82826040518060200160405280600081525061143c565b5050565b6000818152606760205260408120546001600160a01b03166110aa5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161067b565b60006110b583610c13565b9050806001600160a01b0316846001600160a01b031614806110f05750836001600160a01b03166110e584610606565b6001600160a01b0316145b8061112057506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661113b82610c13565b6001600160a01b0316146111a35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161067b565b6001600160a01b0382166112055760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161067b565b61121083838361146f565b61121b600082610fa5565b6001600160a01b0383166000908152606860205260408120805460019290611244908490612086565b90915550506001600160a01b038216600090815260686020526040812080546001929061127290849061206e565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff16806112ec575060005460ff16155b6113085760405162461bcd60e51b815260040161067b90611fcf565b600054610100900460ff1615801561132a576000805461ffff19166101011790555b611332611527565b61133a611527565b6113448383611591565b80156107b1576000805461ff0019169055505050565b600054610100900460ff1680611373575060005460ff16155b61138f5760405162461bcd60e51b815260040161067b90611fcf565b600054610100900460ff161580156113b1576000805461ffff19166101011790555b610db4611626565b6113c4848484611128565b6113d084848484611695565b610ecf5760405162461bcd60e51b815260040161067b90611f7d565b60006001600160e01b031982166380ac58cd60e01b148061141d57506001600160e01b03198216635b5e139f60e01b145b8061056e57506301ffc9a760e01b6001600160e01b031983161461056e565b61144683836117a2565b6114536000848484611695565b6107b15760405162461bcd60e51b815260040161067b90611f7d565b6001600160a01b0383166114ca576114c581609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b6114ed565b816001600160a01b0316836001600160a01b0316146114ed576114ed83826118f0565b6001600160a01b038216611504576107b18161198d565b826001600160a01b0316826001600160a01b0316146107b1576107b18282611a3c565b600054610100900460ff1680611540575060005460ff16155b61155c5760405162461bcd60e51b815260040161067b90611fcf565b600054610100900460ff16158015610db4576000805461ffff19166101011790558015610dc6576000805461ff001916905550565b600054610100900460ff16806115aa575060005460ff16155b6115c65760405162461bcd60e51b815260040161067b90611fcf565b600054610100900460ff161580156115e8576000805461ffff19166101011790555b82516115fb906065906020860190611b04565b50815161160f906066906020850190611b04565b5080156107b1576000805461ff0019169055505050565b600054610100900460ff168061163f575060005460ff16155b61165b5760405162461bcd60e51b815260040161067b90611fcf565b600054610100900460ff1615801561167d576000805461ffff19166101011790555b611685611527565b61168d611527565b610db4611527565b60006001600160a01b0384163b1561179757604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906116d9903390899088908890600401611eba565b602060405180830381600087803b1580156116f357600080fd5b505af1925050508015611723575060408051601f3d908101601f1916820190925261172091810190611e2e565b60015b61177d573d808015611751576040519150601f19603f3d011682016040523d82523d6000602084013e611756565b606091505b5080516117755760405162461bcd60e51b815260040161067b90611f7d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611120565b506001949350505050565b6001600160a01b0382166117f85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161067b565b6000818152606760205260409020546001600160a01b03161561185d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161067b565b6118696000838361146f565b6001600160a01b038216600090815260686020526040812080546001929061189290849061206e565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060016118fd84610c8a565b6119079190612086565b60008381526098602052604090205490915080821461195a576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b60995460009061199f90600190612086565b6000838152609a6020526040812054609980549394509092849081106119c7576119c761211f565b9060005260206000200154905080609983815481106119e8576119e861211f565b6000918252602080832090910192909255828152609a90915260408082208490558582528120556099805480611a2057611a20612109565b6001900381819060005260206000200160009055905550505050565b6000611a4783610c8a565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b828054611a8c9061209d565b90600052602060002090601f016020900481019282611aae5760008555611af4565b82601f10611ac75782800160ff19823516178555611af4565b82800160010185558215611af4579182015b82811115611af4578235825591602001919060010190611ad9565b50611b00929150611b78565b5090565b828054611b109061209d565b90600052602060002090601f016020900481019282611b325760008555611af4565b82601f10611b4b57805160ff1916838001178555611af4565b82800160010185558215611af4579182015b82811115611af4578251825591602001919060010190611b5d565b5b80821115611b005760008155600101611b79565b80356001600160a01b0381168114611ba457600080fd5b919050565b600060208284031215611bbb57600080fd5b611bc482611b8d565b9392505050565b60008060408385031215611bde57600080fd5b611be783611b8d565b9150611bf560208401611b8d565b90509250929050565b600080600060608486031215611c1357600080fd5b611c1c84611b8d565b9250611c2a60208501611b8d565b9150604084013590509250925092565b60008060008060808587031215611c5057600080fd5b611c5985611b8d565b9350611c6760208601611b8d565b925060408501359150606085013567ffffffffffffffff80821115611c8b57600080fd5b818701915087601f830112611c9f57600080fd5b813581811115611cb157611cb1612135565b604051601f8201601f19908116603f01168101908382118183101715611cd957611cd9612135565b816040528281528a6020848701011115611cf257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611d2957600080fd5b611d3283611b8d565b915060208301358015158114611d4757600080fd5b809150509250929050565b60008060408385031215611d6557600080fd5b611d6e83611b8d565b946020939093013593505050565b600060208284031215611d8e57600080fd5b5035919050565b600080600060408486031215611daa57600080fd5b83359250602084013567ffffffffffffffff80821115611dc957600080fd5b818601915086601f830112611ddd57600080fd5b813581811115611dec57600080fd5b876020828501011115611dfe57600080fd5b6020830194508093505050509250925092565b600060208284031215611e2357600080fd5b8135611bc48161214b565b600060208284031215611e4057600080fd5b8151611bc48161214b565b60008060408385031215611e5e57600080fd5b50508035926020909101359150565b6000815180845260005b81811015611e9357602081850181015186830182015201611e77565b81811115611ea5576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611eed90830184611e6d565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611f2f57835183529284019291840191600101611f13565b50909695505050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b602081526000611bc46020830184611e6d565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115612081576120816120f3565b500190565b600082821015612098576120986120f3565b500390565b600181811c908216806120b157607f821691505b602082108114156120d257634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156120ec576120ec6120f3565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610dc657600080fdfea2646970667358221220873b5356cacb05b675cf6d5d21e194bf86bd371d12c4d33333d1dfd5ff23a69e64736f6c63430008070033";

export class OrgId__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OrgId> {
    return super.deploy(overrides || {}) as Promise<OrgId>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OrgId {
    return super.attach(address) as OrgId;
  }
  connect(signer: Signer): OrgId__factory {
    return super.connect(signer) as OrgId__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrgIdInterface {
    return new utils.Interface(_abi) as OrgIdInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OrgId {
    return new Contract(address, _abi, signerOrProvider) as OrgId;
  }
}
