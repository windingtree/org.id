/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NonERC721Receiver,
  NonERC721ReceiverInterface,
} from "../NonERC721Receiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xa2b921e2",
        type: "bytes32",
      },
    ],
    name: "c_0xa2b921e2",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060dc8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80637b7c960814602d575b600080fd5b60436004803603810190603f9190605b565b6045565b005b50565b6000813590506055816092565b92915050565b600060208284031215606e57606d608d565b5b6000607a848285016048565b91505092915050565b6000819050919050565b600080fd5b6099816083565b811460a357600080fd5b5056fea264697066735822122093139c2a4e9f07af03b069d11f8f3f77805c0f3efe372128743fe7f6e885508c64736f6c63430008070033";

export class NonERC721Receiver__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NonERC721Receiver> {
    return super.deploy(overrides || {}) as Promise<NonERC721Receiver>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NonERC721Receiver {
    return super.attach(address) as NonERC721Receiver;
  }
  connect(signer: Signer): NonERC721Receiver__factory {
    return super.connect(signer) as NonERC721Receiver__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NonERC721ReceiverInterface {
    return new utils.Interface(_abi) as NonERC721ReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NonERC721Receiver {
    return new Contract(address, _abi, signerOrProvider) as NonERC721Receiver;
  }
}
